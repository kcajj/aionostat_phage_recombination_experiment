import matplotlib.pyplot as plt
from collections import defaultdict
from Bio import SeqIO

def extract_seq(path):
    return SeqIO.read(path, 'fasta').seq

k = 50

seq_one = extract_seq('/home/giacomocastagnetti/code/rec_genome_analysis/data/references/EM60_assembly.fasta')
seq_two = extract_seq('/home/giacomocastagnetti/code/rec_genome_analysis/data/references/EM11_assembly.fasta')

#seq_one = 'TCTTTGTCAAGTGCTGCATGAAAAATTTACAATCTTGTATGGTAGCATTTTTGCGGCCCTGTTTACATTCAGGAGTGTATGTATAATCCTTGGTGTGTGGGCGTTTAGACGTCTAGACGGTCAGAAGTCTGCAGGTCAATATCTAATCTATTGGCTGCTAACTATATCCCCCACAAATAATAAGAAATATAATTGTTATGTGCGTAAACAGTAACCCATGTTATCAATCCCTGTATGTATCGCCAGTGGTGCGCATAATGGGTATTATGTTAAATTGCCCGTAATGATAACTATTCTCACAATGATAGGTATTCTCATTCACTCCCACAAGATAGGTTGCAAATGTTGTGCCATTGTGTGAACGGCCTCACCTATTAATTTGCCTCACTGCCTCGATATTTGAGAATTGTTATAAGAATGAGAATGATTCCCATTTCGTCCGCCTAGCAGCACTCCTGTAGGACAAGCACAAAATCGTGGCATAGCTGGACCTGTTCAGATATTTCTGGCTGGCTCTTCAGGTCTGTGTGGGAAAAGCCAACCCCCTCCGGCGGCGGGGAGGGTGTCAATTAAAAAATTTACGGGGTATATGAAGCGCTCTTCAGGTAAGGCATGTACTATGGGATGAAACCCTCTTCGGGCAATGATATTTGTGGGTGTGATATTTGCTGGAAAGCCAGATATGACGGGACTCCCGGCGGGGCAGGGGTAGTACAGACAGGGAAAATATGGGGATGTAGTTGGGTGAATTGATTGGGCAGGTAGAGTATGGAATATGTTACAAGTATGTTAAATATGGAGGGTGAATATCTGCAGGATTTGTGTGTAAAATCAAAGACT'
#seq_two = 'CTCTTTGTCAAGTGCTGCATGAAAAATTTACAAGCTTGTATGGTAGCATTTTTGCGGCCCTGTTTACATTCAGGAGTGTATGTATAATCCTTGGTGTGTGGGCGTTTAGACGTCTGGACGGTAAGAAGTCTGCAGGTTAATATCTAATCTATCGGCTGCTAACTATATCCCACACAAATAGTAAGAAATATAATTGTTATGTGCGTAAACAGTAACCCATGTTATCAATCCCTGTATGTATCGCCAGTGGTGCGCATAATGGGTATTATGTTAAATTGCCCGTAATGATAAAGGTTCTCACAATGATAGGTATTCTCATTCACCCTCACAAAATAGATTGCAAATGTTGTGCCACTGTGTGAACGGCCTCACCTATTAATTTGCCTCACTGCCTCGATATTTGAGAATTATTATAAGAATGAGAAGTATTCCCATTTCGTCCGCCTGGCAGCACTCCAGTCGCTACGGCTCATGACAGGGCAGCACTCCTGTAGGTCAGGTCAAAATCGTGGTAGAATTGGGCCTGTTCAGATATTTCTGGCTGACTCTTCAGGTCTGTGTGGGAAAAGCCAACCTCTCCGGCGGGGCAGGGGGTCATGACGGGAAAATTGCAGGTCAATTAAAAAATTTACGTGGTGTATGAAGCGCTCTTCAGGTAAGGCAGGTATTAGAGGATGAAACCCTCTTCAGGCAATGATATTTGTGGGTGTGATATTTGCTGGAAAGCCAGATATGACGGGACTCCCGGCGGGGATGGGGTAGTACAGACAGGGAAAATATGGGGATGTAGTTGGGTAAATTGATCAGGCAGGTAGAGTATGGATTATGTTACAGGTATGTTAAATATGGAGGTTGAATATCTGTAAGATTTGTGTGTAAAATCAAAGACTTAAGTGGTGTTGTGGTATTTTCTATAAATAATTCAAGTTTAATAGGTAATATTTGTTCTCATCCACTTTGTGTGGTAAACAGATTCAGATGAAATTGGTTTACAAGTGTATACATAATATACAAATTAAAGATACAAGAAACCCCCCTCCCCTTCGGCTACCATTCACCTTTTCCTCTGACTGGTACTTAAACACTTATTCAGACTCTTCAGGTTATCACCCATATATCATATGGCAGTGACTGGTGTCCTCCGGCCCCTCTTTCGTCACCCGTCCGCTTCGCCATGCTAATGCCATAGCCAATGGTTCGGTTGTTCACCCTGTTCACTCAGGTGTATCTCCATACCCCTTCAAACCGAAGAGAACAGAAAACCCGAATTACTCGGTAAAAGAAAAGAGAAGAACTTAATTTTATCAAGATAGGCAAGAATGTCAAGGCATGACTGCTCACTAAACAAGCAAACAGTCATGTGTGGGAGGTAAGTGATTGTGGTTGTAGGAAATTTAGTTGAAAGATGTGTTATAGGTGCTTCCAGCACTTTAGCCGGGTAGCTAATTGTGTGTCAGTCCAGCGGTTCATCCTCTACTTCACTGAAATCAATGTTCATGGTCTCTTCCCAACCATCAATCTCAGCACAAGAGTGGAGTTCTTTAGGGTTTACTCCCAAAGCCTCAGCAACAGAGTCTATATTTAACACCTCTGGCAGGTATGATTCATCGAATTCAAGGTAAATCAGGCCACGAGTGTTGTCAGCTCCACCAAATATCTCTATCTTCATAAAATCTCCTCTGGGAATGAAAGTGTGAACAGGGTTTTATACGTTCTAATGCACAGGAATTATACACGTTTGCCTCTTCAGGCCATGCTTTAGCATGAGGAACCTGTGTGGGCTCGGTGCTTCATAGTCTACCACCTCTGAACTCTTCGTGCTCAGGCATAATAGAGAACCAGATATCTACGATGTCCTCCCACGTCAGGTCATCAGCCTCAGGATTTATCTGGGACGAAGATGAAGAGTCCTCAGAATCTAAGTTTTCCTCTTTAACTGGCTCAGCCAAGGGACACATGGTCACTCCTTTGGATGTCTCTTCAGATGCATGTGTGTGTTGATCATGTTCCACCCGTGAGTATTCCGGCAACAGCTGCTATGGACGTAATGATCATCAGGATCACCACCAAAACCTCTGACAATGTTTTCATTGTGTATCCCATATTCTCCAAATGATGTGTGGATATTATCACTGGAGCGGTAATGTGTCAACAGAAACGCCGCGAGGGTTTGGTTAAAATCCGAGCGTATGGTGATTTGGGTCAAAACGGACGTGCGTTCTCGCTACGCTCGAAAGAGAGACTTGTTTGTAGAAAGCTCTTAAACGCTCTGTAACGAGATTATCTGT'

index=defaultdict(lambda: [])
for pos in range(len(seq_one)):
    kmer=seq_one[pos:pos+k]
    index[kmer].append(pos)
    if len(kmer)<k: break

dot_plot_matrix=[]

for pos in range(len(seq_two)):
    kmer=seq_two[pos:pos+k]
    for mapping_position in index[kmer]:
        dot_plot_matrix.append([mapping_position, pos])

dot_plot=[]

for map_position in dot_plot_matrix:
    for counter in range(k):
        point=(map_position[0]+counter, map_position[1]+counter)
        if point not in dot_plot:
            dot_plot.append(point)

x=[]
y=[]
for (dpx,dpy) in dot_plot:
    x.append(dpx)
    y.append(dpy)

plt.scatter(x,y)
plt.show()